Status:
? = Not sure if worth the effort or useful at all.
- = Planned.
X = In progress, some work done.
* = Done.

Before 1.6.0:
* Remove instances of unnamed structures/unions.
* Reference counter for threads, concept of detached threads, threads
  management.
- Active threads registry in the kernel.
- Debug-related features and tools.
- I2C device driver class support.
- USB device driver class support.
- MAC driver revision in order to support copy-less operations, this will
  require changes to lwIP or a new TCP/IP stack however.
- More code examples into the documentation.
- Update C++ wrapper (Heap, Pools, Mailboxes and any new feature).

After 1.6.0
? Minimal optional C-runtime library (complete enough for lwIP).
? Think to something for threads restart.
? OSEK-style simple tasks within the idle thread.
- Threads Pools manager in the library.

Ideas for 2.x.x:
- High resolution timers and tickless kernel.

Ideas for 3.x.x:
- Multicore support.

Side projects:
* lwIP TCP/IP stack integration and demo.
* FatFS library integration and demo.
X ChibiOS Wizard, UML modeling and ChibiOS applications code and
  documentation generator.
? OSEK layer.
- Posix layer.
X File System
- Visual debugger/monitor interfaced through OpenOCD.

Lower priority:
- More demos
- More ports
- More compilers.
