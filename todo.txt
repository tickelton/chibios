Status:
? = Not sure if worth the effort or useful at all.
- = Planned.
X = In progress, some work done.
* = Done.

After 1.2.0:
* Abstract I/O channels rather than just serial ports.
  ? Move the serial drivers implementations in library. Better keep the core
    as compact as possible.
* Add tests documentation to the general documentation via doxygen.
* Static object initializers.
- New chThdCreate() that takes just two parameters, a pointer to a thread
  descriptor and the thread parameter. It could wrap the current variants
  or just be an alternative.
- Remove any instance of unnamed structures/unions.
- Objects registry in the kernel.
- OSEK-style simple tasks within the idle thread.
- Code examples into the documentation.
- Dedicated syscalls.c support for newlib users.
- Threads Pools manager in the library.
- Minimal optional C-runtime library (complete enough for lwIP).
? Think to something for threads restart.
? Multiple heaps, disjoint heaps, heaps in heaps.
- Update C++ wrapper (Heap, Pools, Mailboxes and any new feature).
- Think about making threads return void.

Ideas for 2.x.x:
- High resolution timers and tickless kernel.
- Reference counter for threads, concept of detached threads, threads
  management.

Ideas for 3.x.x:
- Multicore support.

Side projects:
X lwIP TCP/IP stack integration and demo.
X FatFS library integration and demo.
X ChibiOS Wizard, UML modeling and ChibiOS applications code and
  documentation generator.
X OSEK layer.
- Posix layer.
X File System
- Visual debugger/monitor interfaced through OpenOCD.

Lower priority:
- More demos
- More ports
