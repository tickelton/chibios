Status:
- = Planned.
X = In progress, some work done.
* = Done.
? = Not sure if worth the effort or useful at all.
N = Decided against.

Within 2.3.x (hopefully)
- Improvements to the message passing mechanism in order to allow "delayed,
  out of order, responses".
- Add a switch to enable/disable the priority inheritance algorithm in mutexes.
- Introduce a "THREAD" function prefix in order to hide compiler-specific
  optimizations for thread functions.
? Make thread functions return void.
- Introduce compiler-info macros to the port layer, improve the test reports
  with the info.
* Add a "transmission end" event to the serial device driver model.
  X Implement the "transmission end" serial driver event on those platforms
    supporting the feature.
X Add an USB abstract device driver class.
X USB driver implementation for STM32F103/STM32F102.
- USB driver implementation for STM32F105/STM32F107.
X Add a Serial over USB generic device driver implementing a USB Communication
  Device Class and offering a Serial-like interface to the applications.
- Implement USB Mass Storage Class support and demo using the MMC_SPI driver
  as back-end.
X File System infrastructure.
  - Official FatFs wrapper using the new infrastructure, dedicated test suite.
X Transactional flash file system implementation.
X I2C device driver class support and at least one implementation.
- Serial over UART complex driver driver, evaluate from the performance
  results if to make obsolete the current dedicated Serial driver.
X Shared DMA channels support in the STM32/STM8L HALs.
X New device driver models: Clock, Systick, RTC, WDG, DAC, Power Monitor.
- MAC driver for STM32F107 (hardware missing).
- Device drivers for STM8/STM8L (ADC, PWM, bring them on par with STM32).
- Batch testing of the ARM7/ARMCMx port using OpenOCD, with reports.
- Debug-related features and tools.
? Add a *very simple* ADC API for single one shot sampling (implement it as
  an injected conversion on the STM32).
- Update C++ wrapper (Heap, Pools, Mailboxes and any new feature).
- Threads Pools manager in the library.

Later but within 2.x.x
- Dedicated TCP/IP stack.
? ISO7816 driver over UART driver, both reader and card side (hardware
  missing).
- Merge the Coldfire branch in mainline (hardware missing).
- Merge the H8S branch in mainline (hardware missing).
- MAC driver revision in order to support copy-less operations, this will
  require changes to lwIP or a new TCP/IP stack however.

Ideas for 3.x.x:
- MMU/MPU support.
- High resolution timers and tickless kernel.
- Multicore support.

Side projects:
X ChibiOS Wizard, UML modeling and ChibiOS applications code and
  documentation generator.
? File System
- Visual debugger/monitor interfaced through OpenOCD.
