Status:
? = Not sure if worth the effort or useful at all.
- = Planned.
X = In progress, some work done.
* = Done.

Within 2.1.x (hopefully)
* Binary Semaphores on top of Counting Semaphores.
X Direct unbuffered UART driver (evaluate rebuilding the current serial driver
  as a generic driver on top of the low level UART driver).
  Requirements: low level, callbacks, DMA capable, state machines buildable
                on top, support data words greater than 8 bits, callback for
                "last byte transmitted (RS485)", simple implementation,
                verifiable.
X Resist doing more changes and optimizations in the kernel, fixes only.
- Merge the Coldfire branch in mainline.
- Merge the H8S branch in mainline.
- File System infrastructure.
- Add a *very simple* ADC API for simgle one shot sampling (implement it as
  an injected conversion on the STM32).
- MAC driver for STM32F105/STM32F107 (hardware missing).
- Device drivers for STM8 (SPI, ADC, PWM, bring it on par with STM32).
- Support for more compilers (ARMCMx only initially).
- Support for not just Makefiles (Ride7, Crossworks, Eclipse CDT etc).
- Batch testing of the ARM7/ARMCMx port using OpenOCD, with reports.

Later but within 2.x.x
- Debug-related features and tools.
- I2C device driver class support.
- USB device driver class support.
- MAC driver revision in order to support copy-less operations, this will
  require changes to lwIP or a new TCP/IP stack however.
- Update C++ wrapper (Heap, Pools, Mailboxes and any new feature).
- Threads Pools manager in the library.

Ideas for 3.x.x:
- High resolution timers and tickless kernel.
- Multicore support.

Side projects:
X ChibiOS Wizard, UML modeling and ChibiOS applications code and
  documentation generator.
X File System
? Posix layer.
- Visual debugger/monitor interfaced through OpenOCD.

Lower priority:
- More demos
- More ports
